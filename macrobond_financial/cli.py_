#!/usr/bin/env python3

import argparse
from . import __version__
from .common._get_pandas import _pandas

from .common import Client, Api
from .web import WebClient
from .com import ComClient

parser = argparse.ArgumentParser(
    description="test 1 ",
    epilog="test 2",
)
aa = parser.add_argument
mode_aa = parser.add_mutually_exclusive_group().add_argument

aa("-v", "--version", action="version", version="%(prog)s " + __version__)

mode_aa(
    "--web",
    action="store_true",
    help="Use web api",
)

mode_aa(
    "--com",
    action="store_true",
    help="Use com api",
)

mode_aa(
    "--auto",
    action="store_true",
    help="Use com or web api",
)


def main(_args=None):
    args = _args or parser.parse_args()

    if _pandas is not None:
        _pandas.set_option(
            "display.max_rows",
            1000,
            "display.max_columns",
            1000,
            "display.max_rows",
            False,
            "display.width",
            1000,
            "display.max_colwidth",
            1000,
        )

    client: Client = None
    api: Api = None
    try:
        if args.web:
            client = WebClient()
            api = client.open()
        elif args.com:
            client = ComClient()
            api = client.open()
        else:
            try:
                client = ComClient()
                api = client.open()
            except:
                client = WebClient()
                api = client.open()

        print(api.get_one_series("usgdp").data_frame())

    finally:
        if client:
            client.close()


if __name__ == "__main__":
    main(parser.parse_args())
